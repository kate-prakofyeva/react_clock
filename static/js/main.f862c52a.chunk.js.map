{"version":3,"sources":["utils/getTime.ts","components/Clock.tsx","App.tsx","index.tsx"],"names":["getTime","Date","toUTCString","slice","Clock","state","time","timerId","handleInterval","setState","this","window","setInterval","console","info","clearInterval","className","props","clockName","Component","getRandomName","value","now","toString","App","hasClock","handleContextmenuClick","event","preventDefault","handleLeftClick","document","addEventListener","_","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oMAAO,SAASA,IAGd,OAFc,IAAIC,MAELC,cAAcC,OAAO,IAAK,G,WCQ5BC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,KAFV,EAKEO,QAAU,EALZ,EAmBEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,KAAMN,OApB1B,uDAOE,WAAqB,IAAD,OAClBU,KAAKH,QAAUI,OAAOC,aAAY,WAChC,EAAKJ,iBAELK,QAAQC,KAAK,EAAKT,MAAMC,QACvB,OAZP,kCAeE,WACEK,OAAOI,cAAcL,KAAKH,WAhB9B,oBAuBE,WACE,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,KAAKO,MAAMC,YAEb,YACD,sBAAMF,UAAU,cAAhB,SACGN,KAAKL,MAAMC,cA/BtB,GAA2Ba,aCP3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWpB,OAAO,GAE3C,MAAM,SAAN,OAAgBkB,GAQX,IAAMG,EAAb,4MACEnB,MAAQ,CACNa,UAAW,UACXO,UAAU,GAHd,EAMElB,QAAU,EANZ,EA8BEC,eAAiB,WACf,EAAKC,SAAS,CACZS,UAAWE,OAhCjB,EAoCEM,uBAAyB,SAACC,GACxBA,EAAMC,iBACN,EAAKnB,SAAS,CACZgB,UAAU,KAvChB,EA2CEI,gBAAkB,SAACF,GACjBA,EAAMC,iBACN,EAAKnB,SAAS,CACZgB,UAAU,KA9ChB,uDAQE,WAAqB,IAAD,OAClBf,KAAKH,QAAUI,OAAOC,aAAY,kBAAM,EAAKJ,mBAAkB,MAE/DsB,SAASC,iBAAiB,cAAerB,KAAKgB,wBAC9CI,SAASC,iBAAiB,QAASrB,KAAKmB,mBAZ5C,gCAeE,SAAmBG,EAAMC,GACvB,MAAgCvB,KAAKL,MAA7BoB,EAAR,EAAQA,SAAUP,EAAlB,EAAkBA,UAEdO,GAAYQ,EAAUf,YAAcA,GAEtCL,QAAQqB,MAAR,uBAA8BD,EAAUf,UAAxC,eAAwDA,MApB9D,kCAwBE,WACEP,OAAOI,cAAcL,KAAKH,SAC1BuB,SAASK,oBAAoB,cAAezB,KAAKgB,wBACjDI,SAASK,oBAAoB,QAASzB,KAAKmB,mBA3B/C,oBAkDE,WACE,MAAgCnB,KAAKL,MAA7BoB,EAAR,EAAQA,SAAUP,EAAlB,EAAkBA,UAElB,OACE,sBAAKF,UAAU,MAAf,UACE,6CACES,GAAY,cAAC,EAAD,CAAOP,UAAWA,WAxDxC,GAAyBC,aCZzBiB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.f862c52a.chunk.js","sourcesContent":["export function getTime() {\n  const today = new Date();\n\n  return today.toUTCString().slice(-12, -4);\n}\n","import { Component } from 'react';\nimport { getTime } from '../utils';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    time: getTime(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.handleInterval();\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  handleInterval = () => {\n    this.setState({ time: getTime() });\n  };\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock : boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => this.handleInterval(), 3300);\n\n    document.addEventListener('contextmenu', this.handleContextmenuClick);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentDidUpdate(_:{}, prevState:State) {\n    const { hasClock, clockName } = this.state;\n\n    if (hasClock && prevState.clockName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleContextmenuClick);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  handleInterval = () => {\n    this.setState({\n      clockName: getRandomName(),\n    });\n  };\n\n  handleContextmenuClick = (event:MouseEvent) => {\n    event.preventDefault();\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleLeftClick = (event:MouseEvent) => {\n    event.preventDefault();\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        { hasClock && <Clock clockName={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}